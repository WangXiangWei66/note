# 教育机构：马士兵教育
# 讲    师：杨淑娟
class Student:
    a=1  # 类属性

    def __init__(self,bb,cc): # bb,cc叫__init__方法的参数
        self.b=bb  # self.b 和self.c叫类的实例属性

        self.c=cc


stu=Student(100,200)
# Student类中没有定义实例属性a，但是在这里动态绑定了实例属性a
stu.a=1000 # stu.a与Student中的a不是一回事
print(stu.a)

stu2=Student(11,22)
print(stu2.a) # 在Student中没有实例属性a的，所以调用的是类属性a

# 类属性和实例属性名称相同的了怎么办？
class Person:
    a=1
    def __init__(self,aa):
        self.a=aa #类属性与实例属性名称相同，都是ａ

p=Person(100)
print(p.a)

# 类属性与实例属性的优先级？
'''
1.使用对象名打点调用时(p.a) ,首先找实例属性，如果找得到，输出值即可 
2.如果找不到实例属性，则去找类属性，如果找得到，输出类属性的值，如（stu2.a）
3.如果类属性也没有，只能报错。。。。

'''

# 车就是一个类，  我的车就是一个对象
#　类是抽象的，但类是怎么来的？类是由N多对象抽取出来的（共同的特征和共同的行为）
# 先有类还是先有对象？
# 需要求分析是：由对象抽取出类 ，先有对象，后有类，类是由对象抽取出来的
# 编写代码时是： 先编写类，再创建对象，对象是由类创建出来的
